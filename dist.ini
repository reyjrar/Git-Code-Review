name    = Git-Code-Review
author  = Brad Lhotsky <brad@divisionbyzero.net>
license = BSD
copyright_holder = Brad Lhotsky
copyright_year   = 2014

;Basic
[PruneCruft]
[ExecDir]
[MakeMaker]
[Manifest]

; Documentation
[PodWeaver]
[ContributorsFromGit]
[License]
[InsertCopyright]
[ReadmeMarkdownFromPod]
[ReadmeAnyFromPod / Tutorial ]
filename = Tutorial.mkdn
source_filename = lib/Git/Code/Review/Tutorial.pm
location = root
type = markdown
[CopyFilesFromBuild]
copy = README.mkdn
[MetaJSON]
[MetaConfig]
[MinimumPerl]
[MetaResources]

;Changlog
[ChangelogFromGit]
max_age      = 730
tag_regexp   = ^release-(.+)$
file_name    = Changes
wrap_column  = 74
copy_to_root = 0
exclude_message = ^(Merge (pull|branch))|(Archive)

; Testing
[PodCoverageTests]
[PodSyntaxTests]
[Test::EOL]
[Test::Perl::Critic]
[Test::Compile]

; Prerequesites
[AutoPrereqs]
; authordep Pod::Weaver::Section::Contributors
; authordep Pod::Weaver::Section::Support
; authordep Pod::Weaver::Section::Collect::FromOther
; authordep Pod::Elemental::Transformer::List
[Prereqs]
Git::Repository::Plugin::Log = 0
[CheckPrereqsIndexed]       ; ensure prereqs are on CPAN
[Prereqs / TestRequires]
Pod::Coverage::TrustPod		= 0
Test::Perl::Critic			= 0

; Git stuff
[Git::GatherDir]
exclude_match = \.mkdn$

[Git::NextVersion]  ; get version from last release tag
version_regexp = ^release-(.+)$
[OurPkgVersion]

[Git::Check]        ; ensure all files checked in
allow_dirty = README.mkdn
allow_dirty = Tutorial.mkdn

[GithubMeta]
issues = 1

; Commit handling / Release?
[ConfirmRelease]
[TestRelease]
[UploadToCPAN]
[Git::Commit / Commit_Dirty_Files]

[Git::Tag]
tag_format = release-%v

[Git::Push]         ; push repo to remote
push_to = origin
